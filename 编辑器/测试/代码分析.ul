using * in 编辑器.代码分析
using 相等 in 测试.实用.通用.测试相关
using * in 编辑器.常量

空函数 = "func a {\n  \n}"
后段注释 = "a = -1// b"
部分函数 = "func a {\n  return 1"
后段空格 = "a = 1 "
空行 = ""
两层 = "func a {\nif 1 {\nreturn 1\n}\n}"
带多余空格 = "if 1{\nreturn 1\n    \n}"
带tab = "if 1{\n  return 1\n\t\n}"
带空行 = "if 1{\n  return 1\n\n}"
空行在前 = "if 1{\n\n  return 1\n}"
大括号后注释 = "loop{\nif 1{//a\nreturn 1\n}\n}"

// TODO: 保留末尾空行

相等(后大括号, 解析(空函数)[-2].词性, "后大括号位置")
相等(2, 解析(空函数)[-2].行, "后大括号行号问题")

各代码段 = 处理后大括号(解析(空函数))
相等(代码段(后大括号, "}", 3, 0, 1), 各代码段[-1], "后大括号处理")

// 暂无法解决?
相等(注释, 解析(空函数)[-1].词性, "注释误判")
各代码段 = 解析(部分函数)

相等(整数, 各代码段[-1].词性, "注释误判_部分函数")

相等(注释, 解析(后段注释)[-1].词性, "后段注释")
相等(空格, 解析(后段空格)[-1].词性, "后段空格")
相等([], 解析(空行), "空行")

相等(1, 未配对括号数(各代码段), "未配对括号数_部分函数")
相等(0, 未配对括号数(解析(空函数)), "未配对括号数_空函数")
相等(0, 未配对括号数(解析("func a{")), "未配对括号数_前大括号于末尾")
相等(0, 未配对括号数(解析(空行)), "未配对括号数_空行")

相等("a = 1", 格式化(后段空格), "格式化_后段空格")
相等("func a {\n\n}", 格式化(空函数), "格式化_空函数")
相等("func a {\n  if 1 {\n    return 1\n  }\n}", 格式化(两层), "格式化_两层")

相等("if 1{\n  return 1\n\n}", 格式化(带多余空格), "格式化_带多余空格")
相等("if 1{\n  return 1\n\n}", 格式化(带tab), "格式化_带tab")

// TODO：不应删除缩进
相等("if 1{\n\nreturn 1\n}", 格式化(空行在前), "格式化_空行在前")

// TODO：if 前只应有一个缩进
相等("loop{\n    if 1{//a\n    return 1\n  }\n}", 格式化(大括号后注释), "格式化_大括号后注释")

相等(带空行, 格式化(带空行), "格式化_带空行")
