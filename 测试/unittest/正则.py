import re
import unittest

class test交互(unittest.TestCase):

    def test_双引号字符串(self):
        双引号字符串 = r'(")((?<!\\)\\\1|.)*?\1'
        正确字符串 = ['""',
            r'"\""',  # 等价 '"\\""'
            r'"\"a"',
            r'"\c"',  # r'(\")((?<!\\)\\\1|(?<!\\).)*?\1' 不匹配, 因此 ?<! 仅作用于 \\\1 部分
            #r'"\\""'  匹配为 '"\\"'
            r'"\"a\"b"',
            '"abc"',
            r'"\n"',
            ]
        for 字符串 in 正确字符串:
            self.比较(双引号字符串, 字符串, 字符串)
        #TODO： 测试错误字符串

    def test_字符串插值(self):
        插值 = r'\\\(([^\\\)]*)\\\)|`([^`]*)`'
        期望 = {
            r'`ab`': r'`ab`',
            r'\(\)': r'\(\)',  # 不能与正则表达混淆, 反斜杠不需\\
            # r'\(\\)': r'\(\\)', # 不匹配
            # r'\()\)': r'\()\)', # 不匹配
            }
        for 字符串 in 期望:
            self.比较(插值, 字符串, 期望[字符串])

    def 比较(self, 表达式, 全文本, 目标匹配内容):
        m = re.search(表达式, 全文本)
        self.assertEqual(m.group(0), 目标匹配内容, "比较有误")