type Person {
    operator + (a) {
        return Person(self.name + a.name)
    }

    operator += (a) {
        self.name += a.name
        return self
    }

    operator - (a) {
        return Person(self.name - a.name)
    }

    operator -= (a) {
        self.name -= a.name
        return self
    }

    operator == (a) {
        return self.name == a.name
    }

    operator [ ] (a) {
        return self.items[a]
    }

    operator [ ] (a, b) {
        self.items[a + 1] = b
        return self.items
    }

    operator << (a) {
        return Person(self.name << a + 1)
    }

    operator << a {
        return Person(self.name << a)
    }

    operator <<= (a) {
        self.name <<= a
        return self
    }

    operator >> (a) {
        return Person(self.name >> a)
    }

    operator >>= (a) {
        self.name >>= a
        return self
    }

    operator * (a) {
        return Person(self.name * a)
    }

    operator *= (a) {
        self.name *= a
        return self
    }

    operator / (a) {
        return Person(self.name / a)
    }

    operator /= (a) {
        self.name /= a
        return self
    }

    operator % (a) {
        return Person(self.name % a)
    }

    operator %= (a) {
        self.name %= a
        return self
    }

    operator ^ (a) {
        return Person(self.name ^ a)
    }

    operator ^= (a) {
        self.name ^= a
        return self
    }

    operator > (a) {
        return self.name > a.name
    }

    operator >= (a) {
        return self.name >= a.name
    }

    operator < (a) {
        return self.name < a.name
    }

    operator <= (a) {
        return self.name <= a.name
    }

    operator != (a) {
        return self.name != a.name
    }

    operator ! {
        return ! self.name
    }

    operator ~ {
        return ~ self.name
    }

    operator - {
        return Person(-self.name)
    }

    operator # () {
        return len(self.items) + 1
    }

    operator # {
        return len(self.items)
    }

    func $Person(name) {
        self.name = name
        self.items = [1,2,3,4]
    }
}
hua = Person(1)
hua[0] = 3
print(hua[:])
mulan = Person(2)
huaMulan = hua + mulan
print(huaMulan.name)
huaMulan = mulan - hua
print(huaMulan.name)
print(Person(1) == Person(1))
huaMulan += hua
print(huaMulan.name)
huaMulan -= hua
print(huaMulan.name)
huaMulan = hua << 1
print(huaMulan.name)
huaMulan = -hua
print(huaMulan.name)
print(#huaMulan)
hua <<= 1
print(hua.name)
huaMulan = hua >> 1
print(huaMulan.name)
hua >>= 1
print(hua.name)
huaMulan = hua * 2
print(huaMulan.name)
huaMulan = Person(1)
huaMulan *= 2
print(huaMulan.name)
huaMulan = Person(10)
huaMulan = huaMulan / 5
print(huaMulan.name)
huaMulan = Person(10)
huaMulan /= 2
print(huaMulan.name)
huaMulan = Person(8) % 5
print(huaMulan.name)
huaMulan = Person(8)
huaMulan %= 5
print(huaMulan.name)
huaMulan = Person(2) ^ 2
print(huaMulan.name)
huaMulan = Person(2)
huaMulan ^= 2
print(huaMulan.name)
print(Person(2) > Person(1))
print(Person(1) >= Person(2))
print(Person(1) < Person(2))
print(Person(2) <= Person(1))
print(Person(2) != Person(1))
print(! Person(false))
print(~Person(1))