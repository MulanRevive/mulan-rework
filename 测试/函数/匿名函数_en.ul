print(list(filter(func (n) { return n>0 }, [1,-1])))
print(list(filter(n -> n>0, [1,-1])))
print(list(filter(n -> {
  square = n*n
  return square>5
}, [1,3])))
print(list(filter(
  length -> { area = length * length; return area > 5 },
  [1,3]
)))
print(list(map(
  func (length) { area = length * length; return area },
  [1, 2]
)))
print(func (length, width) {
  area = length * width;
  return area
}(3, 4))
type shape {
{}
}
print(func (length) : shape {
  return shape()
}(1) != nil)
a = () -> 3
print(a())
s = (length:int) -> length*length
print(s(2))
print(list(filter((n:int) -> n>0, [1,-1])))
v = (long:int, wide:int, high:int) -> long*wide*high
print(v(2, 3, 4))
v = (long, wide, high) -> long*wide*high
print(v(3, 4, 5))
s = (wide, high:int) -> wide*high
print(s(2, 3))
s = (long:int, high=3) -> long*high/2
print(s(3, 4))
print(s(4))