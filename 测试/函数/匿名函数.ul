print(list(filter(func (n) { return n>0 }, [1,-1])))
print(list(filter(n -> n>0, [1,-1])))
print(list(filter(n -> {
  平方 = n*n
  return 平方>5
}, [1,3])))
print(list(filter(
  边长 -> { 面积 = 边长 * 边长; return 面积 > 5 },
  [1,3]
)))
print(list(map(
  func (边长) { 面积 = 边长 * 边长; return 面积 },
  [1, 2]
)))
print(func (长, 宽) {
  面积 = 长 * 宽;
  return 面积
}(3, 4))
type 形状 {
{}
}
print(func (边长) : 形状 {
  return 形状()
}(1) != nil)
a = () -> 3
print(a())
正方形面积 = (边长:int) -> 边长*边长
print(正方形面积(2))
print(list(filter((n:int) -> n>0, [1,-1])))
体积 = (长:int, 宽:int, 高:int) -> 长*宽*高
print(体积(2, 3, 4))
长方体体积 = (长, 宽, 高) -> 长*宽*高
print(长方体体积(3, 4, 5))
长方形面积 = (宽, 高:int) -> 宽*高
print(长方形面积(2, 3))
三角形面积 = (底:int, 高=3) -> 底*高/2
print(三角形面积(3, 4))
print(三角形面积(4))